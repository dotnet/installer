###
### DO NOT MODIFY THIS FILE!
###
### This YAML was auto-generated from VmrSyncJobTemplate
### To make changes, change the C# definition and rebuild its project
###
### These steps synchronize code from product repositories into the VMR (https://github.com/dotnet/dotnet)

parameters:
- name: targetRef
  displayName: Target revision in dotnet/installer to synchronize
  type: string
  default: $(Build.SourceVersion)

- name: vmrBranch
  displayName: dotnet/dotnet branch to use
  type: string
  default: $(Build.SourceBranchName)

jobs:
- job: Synchronize
  displayName: Synchronize dotnet/dotnet
  pool:
    ${{ if eq(variables['System.TeamProject'], 'public') }}:
      name: NetCore-Public
      demands:
      - ImageOverride -equals Build.Ubuntu.1804.Amd64.Open
    ${{ else }}:
      name: NetCore1ESPool-Internal
      demands:
      - ImageOverride -equals Build.Ubuntu.1804.Amd64
  steps:
  - checkout: self
    clean: true
    displayName: Checkout dotnet/installer
    fetchDepth: 0
    path: installer

  - checkout: vmr
    clean: true
    displayName: Checkout dotnet/dotnet
    fetchDepth: 0
    path: vmr
    timeoutInMinutes: 30

  - script: |-
      source ./eng/common/tools.sh
      InitializeDotNetCli true
      ./.dotnet/dotnet tool restore
    displayName: Restore toolset
    workingDirectory: $(Agent.BuildDirectory)/installer

  - ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
    - script: |-
        cp -r $(Agent.BuildDirectory)/installer $(Agent.TempDirectory)/installer
      displayName: '[PR Only] Prepare dotnet/installer clone'

  - script: |-
      $(Agent.BuildDirectory)/installer/.dotnet/dotnet darc vmr update --vmr $(Agent.BuildDirectory)/vmr --tmp $(Agent.TempDirectory) --azdev-pat $(System.AccessToken) --github-pat $(BotAccount-dotnet-bot-repo-PAT) --recursive --verbose installer:${{ parameters.targetRef }}
    displayName: Synchronize dotnet/dotnet
    workingDirectory: $(Agent.BuildDirectory)/installer
    timeoutInMinutes: 90

  - ${{ if and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['System.TeamProject'], 'internal')) }}:
    - script: |-
        set -x
        git config --global user.email 'dotnet-maestro[bot]@users.noreply.github.com' && git config --global user.name 'dotnet-maestro[bot]'
        git remote add dotnet 'https://$(BotAccount-dotnet-bot-repo-PAT)@github.com/dotnet/dotnet.git'
        git fetch dotnet
        git branch ${{ parameters.vmrBranch }}
        git branch --set-upstream-to=dotnet/${{ parameters.vmrBranch }} ${{ parameters.vmrBranch }} || echo 'Branch ${{ parameters.vmrBranch }} not found in remote'
        git push dotnet ${{ parameters.vmrBranch }}
      displayName: Push changes to dotnet/dotnet
      workingDirectory: $(Agent.BuildDirectory)/vmr
      timeoutInMinutes: 60
  timeoutInMinutes: 120
