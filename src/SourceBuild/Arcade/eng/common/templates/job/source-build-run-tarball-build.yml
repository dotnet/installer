# Builds a source-build tarball

parameters:
  # Custom condition to apply to the job
  condition: true

  # Dependent jobs that must be completed before this job will run
  dependsOn:

  # Resource id of the installer build to retrieve source/product tarball's from
  installerBuildResourceId: current

  # The following parameters aren't expected to be passed in rather they are used for encapsulation
  # -----------------------------------------------------------------------------------------------
  centOSStream8Container: mcr.microsoft.com/dotnet-buildtools/prereqs:centos-stream8
  centOSStream9Container: mcr.microsoft.com/dotnet-buildtools/prereqs:centos-stream9
  debian11Arm64Container: mcr.microsoft.com/dotnet-buildtools/prereqs:debian-11-arm64v8
  fedora36Container: mcr.microsoft.com/dotnet-buildtools/prereqs:fedora-36
  ubuntu2004Container: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-20.04
  poolInternalAmd64:
    name: NetCore1ESPool-Svc-Internal
    demands: ImageOverride -equals Build.Ubuntu.1804.Amd64
  poolInternalArm64:
    name: Docker-Linux-Arm-Internal
  poolPublicAmd64:
    name: NetCore-Svc-Public
    demands: ImageOverride -equals Build.Ubuntu.1804.Amd64.Open

jobs:
- template: /src/SourceBuild/Arcade/eng/common/templates/job/source-build-build-tarball.yml
  parameters:
    architecture: x64
    condition: ${{ parameters.condition }}
    dependsOn: ${{ parameters.dependsOn }}
    ${{ if or(eq(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'PullRequest')) }}:
      excludeSdkContentTests: true
    installerBuildResourceId: ${{ parameters.installerBuildResourceId }}
    matrix:
      CentOSStream8-Online:
        _BootstrapPrep: false
        _Container: ${{ parameters.centOSStream8Container }}
        _EnablePoison: false
        _ExcludeOmniSharpTests: true
        _RunOnline: true
      ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
        CentOSStream8-Offline:
          _BootstrapPrep: false
          _Container: ${{ parameters.centOSStream8Container }}
          _EnablePoison: false
          _ExcludeOmniSharpTests: true
          _RunOnline: false
        CentOSStream9-Offline:
          _BootstrapPrep: false
          _Container: ${{ parameters.centOSStream9Container }}
          _EnablePoison: false
          _ExcludeOmniSharpTests: false
          _RunOnline: false
        Fedora36-Offline:
          _BootstrapPrep: false
          _Container: ${{ parameters.fedora36Container }}
          _EnablePoison: true
          _ExcludeOmniSharpTests: false
          _RunOnline: false
        Ubuntu2004-Offline:
          _BootstrapPrep: false
          _Container: ${{ parameters.ubuntu2004Container }}
          _EnablePoison: false
          _ExcludeOmniSharpTests: false
          _RunOnline: false
    name: Build_Tarball_x64
    pool:
      ${{ if eq(variables['System.TeamProject'], 'public') }}:
        ${{ parameters.poolPublicAmd64 }}
      ${{ if eq(variables['System.TeamProject'], 'internal') }}:
        ${{ parameters.poolInternalAmd64 }}

- ${{ if eq(variables['System.TeamProject'], 'internal') }}:
  - template: /src/SourceBuild/Arcade/eng/common/templates/job/source-build-build-tarball.yml
    parameters:
      architecture: arm64
      condition: ${{ parameters.condition }}
      dependsOn: ${{ parameters.dependsOn }}
      ${{ if in(variables['Build.Reason'], 'PullRequest') }}:
        excludeSdkContentTests: true
      installerBuildResourceId: ${{ parameters.installerBuildResourceId }}
      matrix:
        ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
          Debian11-Offline:
            _BootstrapPrep: true
            _Container: ${{ parameters.debian11Arm64Container }}
            _EnablePoison: false
            _ExcludeOmniSharpTests: false
            _RunOnline: false
      name: Build_Tarball_arm64
      pool: ${{ parameters.poolInternalArm64 }}

- ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
  - template: /src/SourceBuild/Arcade/eng/common/templates/job/source-build-build-tarball.yml
    parameters:
      architecture: x64
      # Always attempt to run the bootstrap leg (e.g. even when stage 1 tests fail) in order to get a complete accessment of the build status.
      # The bootstrap build will shortcut if the stage 1 build failed.
      condition: and(${{ parameters.condition }}, succeededOrFailed())
      dependsOn: Build_Tarball_x64
      excludeSdkContentTests: true
      installerBuildResourceId: ${{ parameters.installerBuildResourceId }}
      matrix:
        Fedora36-Offline:
          _PreviousSourceBuildArtifact: Build_Tarball_x64 Fedora36-Offline_Artifacts
          _Container: ${{ parameters.fedora36Container }}
          _EnablePoison: false
          _ExcludeOmniSharpTests: false
          _RunOnline: false
      name: Build_Tarball_x64_Using_Previous
      pool:
        ${{ if eq(variables['System.TeamProject'], 'public') }}:
          ${{ parameters.poolPublicAmd64 }}
        ${{ if eq(variables['System.TeamProject'], 'internal') }}:
          ${{ parameters.poolInternalAmd64 }}
      usePreviousArtifacts: true
