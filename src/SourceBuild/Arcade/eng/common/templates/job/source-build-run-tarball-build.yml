# Builds a source-build tarball

parameters:
  # Custom condition to apply to the job
  condition: true

  # Dependent jobs that must be completed before this job will run
  dependsOn:

  # The resource id of the tarball to download and build
  tarballResourceId: current

  # The following parameters aren't expected to be passed in rather they are used for encapsulation
  # -----------------------------------------------------------------------------------------------
  centOS7Container: mcr.microsoft.com/dotnet-buildtools/prereqs:centos-7-20210714125435-9b5bbc2
  centOS8Container: mcr.microsoft.com/dotnet-buildtools/prereqs:centos-8-20210714125410-9b5bbc2
  debian9Container: mcr.microsoft.com/dotnet-buildtools/prereqs:debian-stretch-20211001171226-047508b
  fedora33Container: mcr.microsoft.com/dotnet-buildtools/prereqs:fedora-33-20210222183538-031e7d2
  fedora34Container: mcr.microsoft.com/dotnet-buildtools/prereqs:fedora-34-20210924174119-cd1cb75
  ubuntu1804Container: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-20210924170306-047508b
  poolInternal:
    name: NetCore1ESPool-Svc-Internal
    demands: ImageOverride -equals Build.Ubuntu.1604.Amd64
  poolPublic:
    name: NetCore1ESPool-Svc-Public
    demands: ImageOverride -equals Build.Ubuntu.1604.Amd64.Open

jobs:
- job: Build_Tarball
  condition: ${{ parameters.condition }}
  displayName: Build Tarball
  dependsOn: ${{ parameters.dependsOn }}
  pool:
    ${{ if eq(variables['System.TeamProject'], 'public') }}:
      ${{ parameters.poolPublic }}
    ${{ if eq(variables['System.TeamProject'], 'internal') }}:
      ${{ parameters.poolInternal }}
  strategy:
    matrix:
      CentOS7-Online:
        _BootstrapPrep: true
        _BuildArch: x64
        _Container: ${{ parameters.centOS7Container }}
        _RunOnline: true
      CentOS7-Offline:
        _BootstrapPrep: true
        _BuildArch: x64
        _Container: ${{ parameters.centOS7Container }}
        _RunOnline: false
      ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
        CentOS8-Online:
          _BootstrapPrep: true
          _BuildArch: x64
          _Container: ${{ parameters.centOS8Container }}
          _RunOnline: false
        Debian9-Online:
          _BootstrapPrep: true
          _BuildArch: x64
          _Container: ${{ parameters.debian9Container }}
          _RunOnline: false
        Fedora33-Online:
          _BootstrapPrep: false
          _BuildArch: x64
          _Container: ${{ parameters.fedora33Container }}
          _RunOnline: false
        Fedora34-Online:
          _BootstrapPrep: true
          _BuildArch: x64
          _Container: ${{ parameters.fedora34Container }}
          _RunOnline: false
        Ubuntu1804-Online:
          _BootstrapPrep: true
          _BuildArch: x64
          _Container: ${{ parameters.ubuntu1804Container }}
          _RunOnline: false
  timeoutInMinutes: 240
  variables:
    _TarballDir: $(Build.StagingDirectory)/tarball
  workspace:
    clean: all

  steps:
  - checkout: none

  - template: /src/SourceBuild/Arcade/eng/common/templates/steps/source-build-build-tarball.yml
    parameters:
      buildArch: $(_BuildArch)
      container: $(_Container)
      prepScript: |
        set -x

        customPrepArgs=
        if [ '$(_Bootstrap)' = 'true' ]; then
          customPrepArgs='--bootstrap'
        fi

        docker run --rm -v $(_TarballDir):/tarball -w /tarball $(_Container) ./prep.sh  ${customPrepArgs}
      runOnline: $(_RunOnline)
      tarballDir: $(_TarballDir)
      tarballResourceId: ${{ parameters.tarballResourceId }}
