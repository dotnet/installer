# Builds a source-build tarball

parameters:
  # Custom condition to apply to the job
  condition: true

  # Dependent jobs that must be completed before this job will run
  dependsOn:

  # The resource id of the tarball to download and build
  tarballResourceId: current

jobs:
- job: Source_Build_Run_Tarball_Build
  condition: ${{ parameters.condition }}
  displayName: Source-Build Build Tarball
  dependsOn: ${{ parameters.dependsOn }}
  pool:
    ${{ if eq(variables['System.TeamProject'], 'public') }}:
      name: NetCore1ESPool-Svc-Public
      demands: ImageOverride -equals Build.Ubuntu.1604.Amd64.Open
    ${{ if eq(variables['System.TeamProject'], 'internal') }}:
      name: NetCore1ESPool-Svc-Internal
      demands: ImageOverride -equals Build.Ubuntu.1604.Amd64
  strategy:
    matrix:
      CentOS7-Online:
        _runOnline: true
        _Container: mcr.microsoft.com/dotnet-buildtools/prereqs:centos-7-20210714125435-9b5bbc2
      ${{ if notin(variables['Build.Reason'], 'PullRequest') }}:
        # TODO: Don't run offline for CentOS7 in Pr validation until prebuilts are stabilized/removed, otherwise dependency flow continuously breaks PR validation.
        # https://github.com/dotnet/source-build/issues/2490
        CentOS7-Offline:
          _runOnline: false
          _Container: mcr.microsoft.com/dotnet-buildtools/prereqs:centos-7-20210714125435-9b5bbc2
        CentOS8-Offline:
          _runOnline: false
          _Container: mcr.microsoft.com/dotnet-buildtools/prereqs:centos-8-20210714125410-9b5bbc2
        # TODO: Should not be re-using gcc image for other purposes
        Debian11-Offline:
          _runOnline: false
          _Container: mcr.microsoft.com/dotnet-buildtools/prereqs@debian-11-gcc11-amd64-20211001171325-f42d766
        Fedora33-Offline:
          _runOnline: false
          _Container: mcr.microsoft.com/dotnet-buildtools/prereqs:fedora-33-20210222183538-031e7d2
        Fedora34-Offline:
          _runOnline: false
          _Container: mcr.microsoft.com/dotnet-buildtools/prereqs:fedora-34-20210924174119-cd1cb75
        Ubuntu1604-Offline:
          _runOnline: false
          _Container: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-20210924170333-538077f
        # TODO: Should not be re-using helix image for other purposes
        Ubuntu2104-Offline:
          _runOnline: true
          _Container: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-21.04-helix-amd64-20210922170909-34a2d72
  timeoutInMinutes: 210
  variables:
    _TarballDir: $(Build.StagingDirectory)/tarball
    _BuildConfig: Release
    _BuildArch: x64
  workspace:
    clean: all

  steps:
  - checkout: none

  - download: ${{ parameters.tarballResourceId }}
    artifact: BlobArtifacts
    patterns: '**/dotnet-sdk-source*.tar.gz'
    displayName: Download Tarball

  - script: |
      set -x

      resourceIdPathSegment=
      if [ '${{ parameters.tarballResourceId }}' != 'current' ]; then
        resourceIdPathSegment='${{ parameters.tarballResourceId }}/'
      fi

      mkdir -p "$(_TarballDir)"
      tarballFilePath="$(PIPELINE.WORKSPACE)/${resourceIdPathSegment}BlobArtifacts/dotnet-sdk-source*.tar.gz"
      eval tar -ozxf "$tarballFilePath" -C "$(_TarballDir)"
      eval rm -f "$tarballFilePath"
    displayName: Extract Tarball

  - script: |
      set -x

      docker run --rm -v $(_TarballDir):/tarball -w /tarball $(_Container) ./prep.sh
    displayName: Prep Tarball

  - script: |
      set -x
      df -h

      networkArgs=
      customBuildArgs=
      if [ '$(_runOnline)' = 'true' ]; then
        customBuildArgs='--online'
      else
        networkArgs='--network none'
      fi

      docker run --rm -v $(_TarballDir):/tarball -w /tarball ${networkArgs} $(_Container) ./build.sh ${customBuildArgs} -- /p:CleanWhileBuilding=true
    displayName: Build Tarball

  - ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
    - publish: '$(_TarballDir)/artifacts/$(_BuildArch)/$(_BuildConfig)/'
      artifact: $(Agent.JobName)_Artifacts_Attempt$(System.JobAttempt)
      displayName: Publish Source Build Artifacts

  # TODO: Re-enable once https://github.com/dotnet/source-build/issues/2489 is fixed.
  # - script: |
  #     set -x

  #     docker run --rm -v $(_TarballDir):/tarball -w /tarball $(_Container) ./build.sh --run-smoke-test
  #   displayName: Run Tests

  - template: /src/SourceBuild/Arcade/eng/common/templates/steps/source-build-publish-logs.yml
    parameters:
      sourceFolder: $(_TarballDir)
