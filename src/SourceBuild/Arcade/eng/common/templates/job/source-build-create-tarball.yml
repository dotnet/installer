# Creates a source-build tarball

jobs:
- job: Source_Build_Create_Tarball
  displayName: Source-Build Create Tarball
  pool:
    vmImage: ubuntu-20.04
  container: mcr.microsoft.com/dotnet-buildtools/prereqs:fedora-32-20210222183556-031e7d2
  workspace:
    clean: all

  steps:
  - script: |
      set -x
      df -h

      buildConfig=Release
      # Check if AzDO substitutes in a build config from a variable, and use it if so.
      if [ '$(_BuildConfig)' != '$''(_BuildConfig)' ]; then
        buildConfig='$(_BuildConfig)'
      fi

      officialBuildArgs=
      if [ '${{ and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}' = 'True' ]; then
        officialBuildArgs='/p:DotNetPublishUsingPipelines=true /p:OfficialBuildId=$(BUILD.BUILDNUMBER)'
      fi

      # If building on the internal project, the internal storage variable may be available (usually only if needed)
      # In that case, add variables to allow the download of internal runtimes if the specified versions are not found
      # in the default public locations.
      internalRuntimeDownloadArgs=
      if [ '$(dotnetclimsrc-read-sas-token-base64)' != '$''(dotnetclimsrc-read-sas-token-base64)' ]; then
        internalRuntimeDownloadArgs='/p:DotNetRuntimeSourceFeed=https://dotnetclimsrc.blob.core.windows.net/dotnet /p:DotNetRuntimeSourceFeedKey=$(dotnetclimsrc-read-sas-token-base64) --runtimesourcefeed https://dotnetclimsrc.blob.core.windows.net/dotnet --runtimesourcefeedkey $(dotnetclimsrc-read-sas-token-base64)'
      fi

      ./build.sh \
        --ci \
        --configuration $buildConfig \
        --publish \
        -bl \
        $officialBuildArgs \
        $internalRuntimeDownloadArgs \
        /p:ArcadeBuildTarball=true
    displayName: Create Tarball

  - template: /src/SourceBuild/Arcade/eng/common/templates/steps/source-build-publish-logs.yml
    parameters:
      artifactQualifier: TarballCreation

  - ${{ if or(eq(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'PullRequest')) }}:
    # Only build the tarball if the PR touches source-build source
    - script: |
        if curl "https://api.github.com/repos/dotnet/installer/pulls/$(System.PullRequest.PullRequestNumber)/files" | grep '"filename": "src/SourceBuild/*'
        then
          echo "##vso[task.setvariable variable=_includeTarballBuild]true"
        fi
      displayName: Include Tarball Build Check

    - template: /src/SourceBuild/Arcade/eng/common/templates/steps/source-build-run-tarball-build.yml
      parameters:
        sourceFolder: $(Build.SourcesDirectory)/artifacts/tarball
        condition: eq(variables['_includeTarballBuild'], 'true')
