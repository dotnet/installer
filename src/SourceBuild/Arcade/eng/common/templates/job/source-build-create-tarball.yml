# Creates a source-build tarball

jobs:
- job: Source_Build_Create_Tarball
  container: mcr.microsoft.com/dotnet-buildtools/prereqs:fedora-38
  displayName: Source-Build Create Tarball
  pool:
    ${{ if eq(variables['System.TeamProject'], 'public') }}:
      ${{ if in(variables['Build.Reason'], 'PullRequest') }}:
        name: NetCore-Public-XL
        demands: ImageOverride -equals Build.Ubuntu.1804.Amd64.Open
      ${{ else }}:
        name: NetCore-Svc-Public
        demands: ImageOverride -equals Build.Ubuntu.1804.Amd64.Open
    ${{ if eq(variables['System.TeamProject'], 'internal') }}:
      ${{ if in(variables['Build.Reason'], 'PullRequest') }}:
        name: NetCore1ESPool-Internal-XL
        demands: ImageOverride -equals Build.Ubuntu.1804.Amd64
      ${{ else }}:
        name: NetCore1ESPool-Svc-Internal
        demands: ImageOverride -equals Build.Ubuntu.1804.Amd64

  variables:
  - name: _BuildConfig
    value: Release

  - ${{ if eq(variables['System.TeamProject'], 'internal') }}:
    - group: DotNet-Source-Build-All-Orgs-Source-Access
  workspace:
    clean: all

  steps:
  - ${{ if ne(variables['System.TeamProject'], 'public') }}:
    - task: Bash@3
      displayName: Setup Private Feeds Credentials
      inputs:
        filePath: $(Build.SourcesDirectory)/eng/common/SetupNugetSources.sh
        arguments: $(Build.SourcesDirectory)/NuGet.config $Token
      env:
        Token: $(dn-bot-dnceng-artifact-feeds-rw)
  - script: |
      set -x
      df -h

      officialBuildArgs=
      if [ '${{ and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}' = 'True' ]; then
        officialBuildArgs='/p:OfficialBuildId=$(BUILD.BUILDNUMBER)'
      fi

      # If building on the internal project, the internal storage variable may be available (usually only if needed)
      # In that case, add variables to allow the download of internal runtimes if the specified versions are not found
      # in the default public locations.
      internalRuntimeDownloadArgs=
      if [ '$(dotnetbuilds-internal-container-read-token-base64)' != '$''(dotnetbuilds-internal-container-read-token-base64)' ]; then
        internalRuntimeDownloadArgs='/p:DotNetRuntimeSourceFeed=https://dotnetbuilds.blob.core.windows.net/internal /p:DotNetRuntimeSourceFeedKey=$(dotnetbuilds-internal-container-read-token-base64) --runtimesourcefeed https://dotnetbuilds.blob.core.windows.net/internal --runtimesourcefeedkey $(dotnetbuilds-internal-container-read-token-base64)'
      fi

      ./build.sh \
        --ci \
        --configuration $(_BuildConfig) \
        --publish \
        -bl \
        $officialBuildArgs \
        $internalRuntimeDownloadArgs \
        /p:DotNetPublishUsingPipelines=true \
        /p:ArcadeBuildTarball=true \
        /p:AzDoPat=$(dn-bot-all-orgs-build-rw-code-rw)
    displayName: Create Tarball

  - task: CopyFiles@2
    displayName: Prepare BuildLogs staging directory
    inputs:
      Contents: |
        **/*.log
        **/*.binlog
      TargetFolder: '$(Build.StagingDirectory)/BuildLogs'
      CleanTargetFolder: true
    continueOnError: true
    condition: succeededOrFailed()

  - publish: '$(Build.StagingDirectory)/BuildLogs'
    artifact: $(Agent.JobName)_BuildLogs_Attempt$(System.JobAttempt)
    displayName: Publish BuildLogs
    continueOnError: true
    condition: succeededOrFailed()
