<Project>
  <Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk" />

  <PropertyGroup>
    <!-- StandardSourceBuildArgs include -publish which is not supported by the aspnetcore build script. -->
    <BuildCommandArgs>$(StandardSourceBuildArgs.Replace('--publish', ''))</BuildCommandArgs>
    <!-- The arch flag (defaults to x64) overrides any value of TargetArchitecture that we might set -->
    <BuildCommandArgs>$(BuildCommandArgs) --arch $(Platform)</BuildCommandArgs>
    <BuildCommandArgs>$(BuildCommandArgs) --no-build-repo-tasks</BuildCommandArgs>
    <BuildCommandArgs>$(BuildCommandArgs) /p:BuildNodeJs=false</BuildCommandArgs>
    <BuildCommandArgs>$(BuildCommandArgs) /p:PublishCompressedFilesPathPrefix=$(SourceBuiltAspNetCoreRuntime)</BuildCommandArgs>
    <!-- Update to 1.0.0 version of reference assemblies which are built in SBRP instead of the preview.2 version
         included by Arcade -->
    <BuildCommandArgs>$(BuildCommandArgs) /p:MicrosoftNetFrameworkReferenceAssembliesVersion=1.0.0</BuildCommandArgs>
    <!-- https://github.com/dotnet/sdk/pull/20136 has not flowed into our bootstrap SDK yet, which causes file-in-use issues in ASP.NET
         due to an interaction with the RemoveSharedFrameworkDependencies task.  disable package validation until this is fixed.  -->
    <BuildCommandArgs>$(BuildCommandArgs) /p:EnablePackageValidation=false</BuildCommandArgs>
    <BuildCommand>$(ProjectDirectory)\eng\build$(ShellExtension) $(BuildCommandArgs)</BuildCommand>

    <LogVerbosityOptOut>true</LogVerbosityOptOut>

    <RepoApiImplemented>false</RepoApiImplemented>
    <DependencyVersionInputRepoApiImplemented>true</DependencyVersionInputRepoApiImplemented>

    <GlobalJsonFile>$(ProjectDirectory)global.json</GlobalJsonFile>
    <NuGetConfigFile>$(ProjectDirectory)NuGet.config</NuGetConfigFile>
  </PropertyGroup>

  <ItemGroup>
    <!--
      From aspnetcore Versions.props:
          Versions of Microsoft.CodeAnalysis packages referenced by analyzers shipped in the SDK.
          This need to be pinned since they're used in 3.1 apps and need to be loadable in VS 2019.
      In source-build these don't need to be pinned and can use the source-built versions since it doesn't
      need to support VS 2019.
    -->
    <ExtraPackageVersionPropsPackageInfo Include="Analyzer_MicrosoftCodeAnalysisCSharpVersion" Version="%24(MicrosoftCodeAnalysisCSharpVersion)" />
    <ExtraPackageVersionPropsPackageInfo Include="Analyzer_MicrosoftCodeAnalysisCSharpWorkspacesVersion" Version="%24(MicrosoftCodeAnalysisCSharpWorkspacesVersion)" />
  </ItemGroup>

  <ItemGroup>
    <RepositoryReference Include="arcade" />
    <RepositoryReference Include="source-build" />
    <RepositoryReference Include="runtime" />
    <RepositoryReference Include="msbuild" />
    <RepositoryReference Include="roslyn" />
    <RepositoryReference Include="roslyn-analyzers" />
  </ItemGroup>

  <ItemGroup>
    <UseSourceBuiltSdkOverride Include="@(ArcadeSdkOverride)" />
  </ItemGroup>

  <UsingTask AssemblyFile="$(XPlatSourceBuildTasksAssembly)" TaskName="ReplaceRegexInFiles" />

  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" />
</Project>
