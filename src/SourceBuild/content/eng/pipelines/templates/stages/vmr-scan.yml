stages:
- stage: VMR_Scan
  displayName: VMR Scan
  dependsOn: []
  variables:
  - template: /eng/common/templates/variables/pool-providers.yml
  jobs:
  - job: Scan
    displayName: VMR Scan
    pool:
      ${{ if eq(variables['System.TeamProject'], 'public') }}:
        name: $(DncEngPublicBuildPool)
        demands: ImageOverride -equals Build.Ubuntu.2004.Amd64.Open
      ${{ if eq(variables['System.TeamProject'], 'internal') }}:
        name: $(DncEngInternalBuildPool)
        demands: ImageOverride -equals Build.Ubuntu.2004.Amd64

    steps:
    - checkout: self

    - script: |
        source ./eng/common/tools.sh
        InitializeDotNetCli true
        dotnet='./.dotnet/dotnet'
        "$dotnet" tool restore
      displayName: Initialize tooling
      workingDirectory: $(Build.SourcesDirectory)/src/installer

    - script: >
        ./.dotnet/dotnet darc vmr scan-binary-files
        --vmr "$(Build.SourcesDirectory)"
        --tmp "$(Agent.TempDirectory)"
        || (echo '##[error]Found binaries in the VMR' && exit 1)
      displayName: Scan for binaries
      workingDirectory: $(Build.SourcesDirectory)/src/installer
      continueOnError: true

    - script: >
        ./.dotnet/dotnet darc vmr scan-cloaked-files
        --vmr "$(Build.SourcesDirectory)"
        --tmp "$(Agent.TempDirectory)"
        || (echo '##[error]Found cloaked files in the VMR' && exit 1)
      displayName: Scan for cloaked files
      workingDirectory: $(Build.SourcesDirectory)/src/installer
      continueOnError: true
