<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OverrideTargetRid>$(TargetRid)</OverrideTargetRid>
    <OverrideTargetRid Condition="'$(TargetOS)' == 'osx'">osx-$(TargetArchitecture)</OverrideTargetRid>
    <OverrideTargetRid Condition="'$(TargetOS)' == 'freebsd'">freebsd-$(TargetArchitecture)</OverrideTargetRid>
    <OverrideTargetRid Condition="'$(TargetOS)' == 'windows'">win-$(TargetArchitecture)</OverrideTargetRid>
    <_portableRidOverridden Condition="'$(TargetRid)' != '$(OverrideTargetRid)'">true</_portableRidOverridden>
    <_portableRidOverridden Condition="'$(TargetRid)' == '$(OverrideTargetRid)'">false</_portableRidOverridden>

    <!-- AspNetCore doesn't have a root build script but one under the eng folder. -->
    <BuildScript>$(ProjectDirectory)eng\build$(ShellExtension)</BuildScript>

    <!-- BuildActions includes -publish which is not supported by the aspnetcore build script. -->
    <BuildActions>$(FlagParameterPrefix)restore $(FlagParameterPrefix)build $(FlagParameterPrefix)pack</BuildActions>
    <!-- On Windows, build all for the VB PoC -->
    <BuildActions Condition="'$(DotNetBuildVertical)' == 'true' and '$(BuildOS)' == 'windows'">$(FlagParameterPrefix)restore $(FlagParameterPrefix)all $(FlagParameterPrefix)pack</BuildActions>

    <BuildArgs Condition="'$(OverrideTargetArch)' == ''">$(BuildArgs) $(FlagParameterPrefix)arch $(TargetArchitecture)</BuildArgs>
    <BuildArgs Condition="'$(OverrideTargetArch)' != ''">$(BuildArgs) $(FlagParameterPrefix)arch $(OverrideTargetArch)</BuildArgs>
    <BuildArgs Condition="'$(DotNetBuildVertical)' != 'true' or '$(BuildOS)' != 'windows'">$(BuildArgs) $(FlagParameterPrefix)no-build-repo-tasks</BuildArgs>
    <BuildArgs Condition="'$(DotNetBuildVertical)' != 'true' or '$(BuildOS)' != 'windows'">$(BuildArgs) $(FlagParameterPrefix)no-build-nodejs</BuildArgs>
    <BuildArgs>$(BuildArgs) /p:PortableBuild=$(_portableRidOverridden) /p:TargetRuntimeIdentifier=$(OverrideTargetRid)</BuildArgs>

    <LogVerbosityOptOut>true</LogVerbosityOptOut>
  </PropertyGroup>

  <ItemGroup>
    <RepositoryReference Include="arcade" />
    <RepositoryReference Include="source-build-externals" Condition="'$(DotNetBuildFromSource)' == 'true'" />
    <RepositoryReference Include="runtime" />
    <RepositoryReference Include="msbuild" />
    <RepositoryReference Include="roslyn" />
    <RepositoryReference Include="roslyn-analyzers" />
  </ItemGroup>

  <ItemGroup>
    <EnvironmentVariables Include="warn_as_error=false" />
  </ItemGroup>

  <ItemGroup Condition="'$(DotNetBuildFromSource)' == 'true'">
    <!--
      From aspnetcore Versions.props:
          Versions of Microsoft.CodeAnalysis packages referenced by analyzers shipped in the SDK.
          This need to be pinned since they're used in 3.1 apps and need to be loadable in VS 2019.
      In source-build these don't need to be pinned and can use the source-built versions since it doesn't
      need to support VS 2019.
    -->
    <ExtraPackageVersionPropsPackageInfo Include="Analyzer_MicrosoftCodeAnalysisCSharpVersion" Version="%24(MicrosoftCodeAnalysisCSharpVersion)" />
    <ExtraPackageVersionPropsPackageInfo Include="Analyzer_MicrosoftCodeAnalysisCSharpWorkspacesVersion" Version="%24(MicrosoftCodeAnalysisCSharpWorkspacesVersion)" />
    <ExtraPackageVersionPropsPackageInfo Include="MicrosoftCodeAnalysisVersion_LatestVS" Version="%24(MicrosoftCodeAnalysisCommonVersion)" />
  </ItemGroup>

</Project>
