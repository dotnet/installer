<Project>
  <Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk" />

  <PropertyGroup>
    <ProjectDirectory>$(SubmoduleDirectory)$(RepositoryName)/</ProjectDirectory>
    <SkipEnsurePackagesCreated>true</SkipEnsurePackagesCreated>
    <IncludedPackageVersionPropsFile>$(CurrentSourceBuiltPackageVersionPropsPath)</IncludedPackageVersionPropsFile>
    <EnableSourceControlManagerQueries>false</EnableSourceControlManagerQueries>

    <!--
      The default PackageVersionPropsFlowType behavior (DependenciesOnly) triggers logic that looks for a Version.Details.xml file.
      Setting the type to AllPackages will skip that logic.
    -->
    <PackageVersionPropsFlowType>AllPackages</PackageVersionPropsFlowType>
  </PropertyGroup>

  <ItemGroup>
    <RepositoryReference Include="arcade" />
  </ItemGroup>

  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" />

  <Target Name="DetermineSdkVersion">
    <ItemGroup>
      <SdkTarballItem Include="$(SourceBuiltAssetsDir)dotnet-sdk-*$(TarBallExtension)" />
    </ItemGroup>
    <PropertyGroup>
      <SdkTarball>%(SdkTarballItem.Identity)</SdkTarball>
      <SdkLayout>$(ArtifactsTmpDir)Sdk</SdkLayout>
      <BundledVersionsPropsRelativePath>sdk/*/Microsoft.NETCoreSdk.BundledVersions.props</BundledVersionsPropsRelativePath>
    </PropertyGroup>

    <MakeDir Directories="$(SdkLayout)" />
    <Exec Command="tar -xzf $(SdkTarball) -C $(SdkLayout)"
          WorkingDirectory="$(SdkLayout)" />

    <ItemGroup>
      <BundledVersionsPropsFile Include="$(SdkLayout)/$(BundledVersionsPropsRelativePath)" />
    </ItemGroup>

    <XmlPeek XmlInputPath="@(BundledVersionsPropsFile)"
             Query="Project/PropertyGroup/NETCoreSdkVersion/text()">
        <Output TaskParameter="Result" ItemName="SdkVersionItem" />
    </XmlPeek>
    <PropertyGroup>
      <SdkVersion>@(SdkVersionItem)</SdkVersion>
    </PropertyGroup>

    <RemoveDir Directories="$(SdkLayout)" />
  </Target>

  <Target Name="RepoBuild"
          DependsOnTargets="
            DetermineMicrosoftSourceBuildIntermediateInstallerVersion;
            DetermineSdkVersion">
    <!-- Copy PVP to packages dir in order to package them together -->
    <Copy SourceFiles="$(IncludedPackageVersionPropsFile)" DestinationFiles="$(SourceBuiltPackagesPath)PackageVersions.props" />

    <!-- Expand SBRP intermediate package into separate folder and remove intermediate package -->
    <PropertyGroup>
      <SourceBuildReferencePackagesDestination>$(SourceBuiltPackagesPath)SourceBuildReferencePackages/</SourceBuildReferencePackagesDestination>
      <SBRPIntermediateWildcard>Microsoft.SourceBuild.Intermediate.source-build-reference-packages*.nupkg</SBRPIntermediateWildcard>
    </PropertyGroup>
    <ItemGroup>
      <SourceBuildReferencePackagesIntermediatePackage Include="$(SourceBuiltPackagesPath)$(SBRPIntermediateWildcard)"/>
    </ItemGroup>

    <MakeDir Directories="$(SourceBuildReferencePackagesDestination)" />
    <ZipFileExtractToDirectory Condition="'@(SourceBuildReferencePackagesIntermediatePackage)' != ''"
                            SourceArchive="%(SourceBuildReferencePackagesIntermediatePackage.Identity)"
                            DestinationDirectory="$(SourceBuildReferencePackagesDestination)extractArtifacts/"
                            OverwriteDestination="true" />

    <ItemGroup>
      <SourceBuildReferencePackagesNupkgFiles Include="$(SourceBuildReferencePackagesDestination)extractArtifacts/**/*.nupkg" />
    </ItemGroup>

    <Copy
      Condition="'@(SourceBuildReferencePackagesNupkgFiles)' != ''"
      SourceFiles="@(SourceBuildReferencePackagesNupkgFiles)"
      DestinationFiles="@(SourceBuildReferencePackagesNupkgFiles -> '$(SourceBuildReferencePackagesDestination)%(Filename)%(Extension)')" />

    <RemoveDir
      Condition="Exists('$(SourceBuildReferencePackagesDestination)extractArtifacts/')"
      Directories="$(SourceBuildReferencePackagesDestination)extractArtifacts/" />

    <PropertyGroup>
      <SourceBuiltTarballName>$(OutputPath)$(SourceBuiltArtifactsTarballName).$(MicrosoftSourceBuildIntermediateInstallerVersion).$(TargetRid).tar.gz</SourceBuiltTarballName>
      <SourceBuiltVersionFileName>.version</SourceBuiltVersionFileName>
    </PropertyGroup>

    <!-- Content of the .version file to include in the tarball -->
    <ItemGroup>
      <VersionFileContent Include="$(RepositoryCommit);$(SdkVersion)" />
    </ItemGroup>

    <WriteLinesToFile
      File="$(SourceBuiltPackagesPath)$(SourceBuiltVersionFileName)"
      Lines="@(VersionFileContent)"
      Overwrite="true" />

    <Exec Command="tar --numeric-owner --exclude='Microsoft.SourceBuild.Intermediate.*.nupkg' -czf $(SourceBuiltTarballName) $(SourceBuiltVersionFileName) *.nupkg *.props SourceBuildReferencePackages/"
          WorkingDirectory="$(SourceBuiltPackagesPath)" />

    <Message Importance="High" Text="Packaged source-built artifacts to $(SourceBuiltTarballName)" />
  </Target>

</Project>
