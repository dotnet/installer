### This pipeline validates new changes of the VMR (https://github.com/dotnet/dotnet)
### VMR is cloned, updates applied locally. The VMR is then built and tests run.

parameters:
- name: targetRef
  displayName: Target revision in dotnet/installer to synchronize to
  type: string
  default: $(Build.SourceVersion)

- name: vmrBranch
  displayName: dotnet/dotnet branch to use
  type: string
  default: $(Build.SourceBranchName)

trigger:
  branches:
    include:
    - main
    - release/8.0.*
    - internal/release/8.0.*

pr:
  branches:
    include:
    - main
    - release/8.0.*
    - internal/release/8.0.*

resources:
  repositories:
  - repository: vmr
    type: github
    name: dotnet/dotnet
    endpoint: public

variables:
- name: vmrPath
  value: $(Agent.BuildDirectory)/vmr
- name: centOSStream8Container
  value: mcr.microsoft.com/dotnet-buildtools/prereqs:centos-stream8
- name: centOSStream9Container
  value: mcr.microsoft.com/dotnet-buildtools/prereqs:centos-stream9
- name: debian11Arm64Container
  value: mcr.microsoft.com/dotnet-buildtools/prereqs:debian-11-arm64v8
- name: fedora36Container
  value: mcr.microsoft.com/dotnet-buildtools/prereqs:fedora-36
- name: ubuntu2004Container
  value: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-20.04
- name: poolInternalAmd64Name
  value: NetCore1ESPool-Svc-Internal
- name: poolInternalAmd64Image
  value: Build.Ubuntu.1804.Amd64
- name: poolInternalAmd64PRName
  value: NetCore1ESPool-Internal-XL
- name: poolInternalAmd64PRImage
  value: Build.Ubuntu.1804.Amd64
- name: poolPublicAmd64Name
  value: NetCore-Public-XL
- name: poolPublicAmd64Image
  value: Build.Ubuntu.1804.Amd64.Open

- template: /eng/common/templates/variables/pool-providers.yml

- ${{ if eq(variables['System.TeamProject'], 'internal') }}:
  - group: DotNetBot-GitHub
- ${{ else }}:
  - name: BotAccount-dotnet-bot-repo-PAT
    value: N/A

jobs:
- job: Build_And_Test
  displayName: Validate VMR changes
  timeoutInMinutes: 120

  pool:
    vmImage: ubuntu-latest
    # TODO: Add Arm64 leg
    # ${{ if eq(variables['System.TeamProject'], 'public') }}:
    #   name: ${{ variables.poolPublicAmd64Name }}
    #   demands: ImageOverride -equals ${{ variables.poolPublicAmd64Image }}
    # ${{ if eq(variables['System.TeamProject'], 'internal') }}:
    #   ${{ if in(variables['Build.Reason'], 'PullRequest') }}:
    #     name: ${{ variables.poolInternalAmd64PRName }}
    #     demands: ImageOverride -equals ${{ variables.poolInternalAmd64PRImage }}
    #   ${{ else }}:
    #     name: ${{ variables.poolInternalAmd64Name }}
    #     demands: ImageOverride -equals ${{ variables.poolInternalAmd64Image }}

  strategy:
    matrix:
      CentOSStream8-Online:
        _BootstrapPrep: false
        _Container: ${{ variables.centOSStream8Container }}
        _EnablePoison: false
        _ExcludeOmniSharpTests: true
        _RunOnline: true
      # ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
      #   CentOSStream8-Offline:
      #     _BootstrapPrep: false
      #     _Container: ${{ parameters.centOSStream8Container }}
      #     _EnablePoison: false
      #     _ExcludeOmniSharpTests: true
      #     _RunOnline: false
      #   CentOSStream9-Offline:
      #     _BootstrapPrep: false
      #     _Container: ${{ parameters.centOSStream9Container }}
      #     _EnablePoison: false
      #     _ExcludeOmniSharpTests: false
      #     _RunOnline: false
      #   Fedora36-Offline:
      #     _BootstrapPrep: false
      #     _Container: ${{ parameters.fedora36Container }}
      #     _EnablePoison: true
      #     _ExcludeOmniSharpTests: false
      #     _RunOnline: false
      #   Ubuntu2004-Offline:
      #     _BootstrapPrep: false
      #     _Container: ${{ parameters.ubuntu2004Container }}
      #     _EnablePoison: false
      #     _ExcludeOmniSharpTests: false
      #     _RunOnline: false

  steps:
  - template: ./pipelines/templates/steps/vmr-prepare.yml
    parameters:
      vmrBranch: ${{ parameters.vmrBranch }}

  - template: ./pipelines/templates/steps/vmr-build-and-test.yml
    parameters:
      vmrPath: $(vmrPath)
      architecture: x64
      ${{ if or(eq(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'PullRequest')) }}:
        excludeSdkContentTests: true
