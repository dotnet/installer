### This job synchronizes code from product repositories into the VMR (https://github.com/dotnet/dotnet)
### It synchronizes the content of the VMR to this new commit and pushes the changes

parameters:
- name: jobName
  displayName: Name of the pipeline job
  type: string

- name: targetRef
  displayName: Target revision of dotnet/installer to synchronize
  type: string
  default: $(Build.SourceVersion)

- name: vmrBranch
  displayName: dotnet/dotnet branch to use
  type: string
  default: $(Build.SourceBranch)

- name: noPush
  displayName: Don't push changes to dotnet/dotnet
  type: boolean
  default: false

jobs:
- job: ${{ parameters.jobName }}
  displayName: Synchronize VMR's ${{ parameters.vmrBranch }}
  timeoutInMinutes: 120
  variables:
  - template: /eng/common/templates/variables/pool-providers.yml
  - name: vmrPath
    value: $(Agent.BuildDirectory)/vmr
  - ${{ if not(parameters.noPush) }}:
    - ${{ if and( eq(variables['System.TeamProject'], 'internal'), or(startswith(variables['Build.SourceBranch'], 'refs/heads/release/'), eq(variables['Build.SourceBranch'], 'refs/heads/main'))) }}:
      - group: DotNetBot-GitHub
      - group: DotNetBot-GitHub-No-Scopes
      - name: vmrPublicUrl
        value: https://github.com/dotnet/dotnet
    - ${{ if and( eq(variables['System.TeamProject'], 'internal'), startswith(variables['Build.SourceBranch'], 'refs/heads/internal/release/')) }}:
      # https://dev.azure.com/dnceng/internal/_library?itemType=VariableGroups&view=VariableGroupView&variableGroupId=172&path=DotNetBot-AzDO-PAT
      - group: DotNetBot-AzDO-PAT
      - name: vmrInternalUrl
        value: https://dnceng@dev.azure.com/dnceng/internal/_git/dotnet-dotnet

  pool:
    ${{ if eq(variables['System.TeamProject'], 'public') }}:
      name: $(DncEngPublicBuildPool)
      demands: ImageOverride -equals Build.Ubuntu.2004.Amd64.Open
    ${{ if eq(variables['System.TeamProject'], 'internal') }}:
      name: $(DncEngInternalBuildPool)
      demands: ImageOverride -equals Build.Ubuntu.2004.Amd64

  steps:
  - template: ../steps/vmr-prepare.yml
    parameters:
      vmrBranch: ${{ parameters.vmrBranch }}
    
  # TODO (https://github.com/dotnet/arcade/issues/11332): Allow full CG?
  # Currently, we ignore dirs of individual repos - they have been scanned before
  - ${{ if and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['System.TeamProject'], 'internal')) }}:
    - task: ComponentGovernanceComponentDetection@0
      inputs:
        sourceScanPath: $(Agent.BuildDirectory)/vmr
        ignoreDirectories: $(Agent.BuildDirectory)/vmr/src

  - template: ../steps/vmr-pull-updates.yml
    parameters:
      vmrPath: $(vmrPath)
      vmrBranch: ${{ parameters.vmrBranch }}
      targetRef: ${{ parameters.targetRef }}

  - ${{ if and(not(parameters.noPush), not(in(variables['Build.Reason'], 'PullRequest')), eq(variables['System.TeamProject'], 'internal')) }}:
    # Push main and release branches to the public VMR
    - ${{ if or(eq(parameters.vmrBranch, 'main'), eq(parameters.vmrBranch, 'main-ub'), startsWith(parameters.vmrBranch, 'release/')) }}:
      - script: >
          ./.dotnet/dotnet darc vmr push
          --vmr '$(vmrPath)'
          --commit-verification-pat '$(BotAccount-dotnet-maestro-bot-no-scopes-PAT)'
          --branch '${{ parameters.vmrBranch }}'
          --remote-url '$(vmrPublicUrl)'
          --github-pat '$(BotAccount-dotnet-bot-repo-PAT)'
          --verbose
        displayName: Push changes to dotnet/dotnet (public)
        workingDirectory: $(Agent.BuildDirectory)/installer
  
    # Push internal/release branches to the internal VMR
    - ${{ if startsWith(parameters.vmrBranch, 'internal/release/') }}:
      - script: >
          ./.dotnet/dotnet darc vmr push
          --vmr '$(vmrPath)'
          --skip-commit-verification
          --branch '${{ parameters.vmrBranch }}'
          --remote-url '$(vmrInternalUrl)'
          --azdev-pat '$(dn-bot-dnceng-build-rw-code-rw)'
          --verbose
        displayName: Push changes to dotnet-dotnet (internal)
        workingDirectory: $(Agent.BuildDirectory)/installer
