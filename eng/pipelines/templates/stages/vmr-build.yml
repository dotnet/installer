### This stage builds https://github.com/dotnet/dotnet with varying parameters
### If run in a PR, new changes are applied to a local copy of the VMR, then it is built and tested

parameters:
# Branch of the VMR to use (to push to for internal builds)
- name: vmrBranch
  type: string
  default: $(Build.SourceBranch)

# Scope of jobs which are executed
- name: scope
  type: string
  values:
  # run 1 leg for smoke tests
  - ultralite
  # run several legs e.g. win/linux/mac for basic testing
  - lite
  # run everything
  - full

# True when build is running from dotnet/dotnet directly
- name: isBuiltFromVmr
  type: boolean
  default: false

# True when building the VMR in source-only mode
- name: isSourceOnlyBuild
  type: boolean
  default: false

#### SOURCE-ONLY BUILD ####
stages:
- ${{ if parameters.isSourceOnlyBuild }}:
  - stage: VMR_SourceOnly_Build
    displayName: VMR Source-Only Build
    dependsOn: []
    variables:
    - template: ../variables/vmr-stage.yml
      parameters:
        vmrBranch: ${{ parameters.vmrBranch }}
    jobs:

    ### Jobs for ultralite builds ###
    - template: ../jobs/vmr-build.yml
      parameters:
        # Changing the build name requires updating the referenced name in the source-build-sdk-diff-tests.yml pipeline
        buildName: CentOSStream8_Online_MsftSdk
        isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
        vmrBranch: ${{ variables.VmrBranch }}
        architecture: x64
        pool:
          name: ${{ variables.defaultPoolName }}
          demands: ${{ variables.defaultPoolDemandsLinux }}
        container: ${{ variables.centOSStream8Container }}
        buildFromArchive: false            # ðŸš«
        buildSourceOnly: true              # âœ…
        enablePoison: false                # ðŸš«
        excludeOmniSharpTests: true        # âœ…
        runOnline: true                    # âœ…
        runTests: true                     # âœ…
        useMonoRuntime: false              # ðŸš«
        withPreviousSDK: false             # ðŸš«

    ### Additional jobs for lite/full builds ###
    - ${{ if in(parameters.scope, 'lite', 'full') }}:

      - template: ../jobs/vmr-build.yml
        parameters:
          # Changing the build name requires updating the referenced name in the source-build-sdk-diff-tests.yml pipeline
          buildName: CentOSStream8_Online_CurrentSourceBuiltSdk
          isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
          vmrBranch: ${{ variables.VmrBranch }}
          architecture: x64
          pool:
            name: ${{ variables.defaultPoolName }}
            demands: ${{ variables.defaultPoolDemandsLinux }}
          container: ${{ variables.centOSStream8Container }}
          buildFromArchive: false            # ðŸš«
          buildSourceOnly: true              # âœ…
          enablePoison: false                # ðŸš«
          excludeOmniSharpTests: true        # âœ…
          runOnline: true                    # âœ…
          runTests: true                     # âœ…
          useMonoRuntime: false              # ðŸš«
          withPreviousSDK: false             # ðŸš«
          reuseBuildArtifactsFrom: CentOSStream8_Online_MsftSdk

      - template: ../jobs/vmr-build.yml
        parameters:
          # Changing the build name requires updating the referenced name in the source-build-sdk-diff-tests.yml pipeline
          buildName: Alpine319_Offline_PreviousSourceBuiltSdk
          isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
          vmrBranch: ${{ variables.VmrBranch }}
          architecture: x64
          artifactsRid: alpine.3.19-x64
          pool:
            name: ${{ variables.defaultPoolName }}
            demands: ${{ variables.defaultPoolDemandsLinux }}
          container: ${{ variables.alpine319Container }}
          buildFromArchive: false            # ðŸš«
          buildSourceOnly: true              # âœ…
          enablePoison: true                 # âœ…
          excludeOmniSharpTests: true        # âœ…
          runOnline: false                   # ðŸš«
          runTests: true                     # âœ…
          useMonoRuntime: false              # ðŸš«
          withPreviousSDK: true              # âœ…

      ### Additional jobs for full build ###
      - ${{ if in(parameters.scope, 'full') }}:

        - template: ../jobs/vmr-build.yml
          parameters:
            # Changing the build name requires updating the referenced name in the source-build-sdk-diff-tests.yml pipeline
            buildName: Alpine319_Online_MsftSdk
            isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
            vmrBranch: ${{ variables.VmrBranch }}
            architecture: x64
            pool:
              name: ${{ variables.defaultPoolName }}
              demands: ${{ variables.defaultPoolDemandsLinux }}
            container: ${{ variables.alpine319Container }}
            buildFromArchive: false            # ðŸš«
            buildSourceOnly: true              # âœ…
            enablePoison: true                 # ðŸš«
            excludeOmniSharpTests: true        # âœ…
            runOnline: true                    # âœ…
            runTests: true                     # âœ…
            useMonoRuntime: false              # ðŸš«
            withPreviousSDK: false             # ðŸš«

        - template: ../jobs/vmr-build.yml
          parameters:
            # Changing the build name requires updating the referenced name in the source-build-sdk-diff-tests.yml pipeline
            buildName: CentOSStream8_Offline_MsftSdk
            isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
            vmrBranch: ${{ variables.VmrBranch }}
            architecture: x64
            pool:
              name: ${{ variables.defaultPoolName }}
              demands: ${{ variables.defaultPoolDemandsLinux }}
            container: ${{ variables.centOSStream8Container }}
            buildFromArchive: true             # âœ…
            buildSourceOnly: true              # âœ…
            enablePoison: false                # ðŸš«
            excludeOmniSharpTests: true        # âœ…
            runOnline: false                   # ðŸš«
            runTests: true                     # âœ…
            useMonoRuntime: false              # ðŸš«
            withPreviousSDK: false             # ðŸš«

        - template: ../jobs/vmr-build.yml
          parameters:
            # Changing the build name requires updating the referenced name in the source-build-sdk-diff-tests.yml pipeline
            buildName: CentOSStream8_Online_PreviousSourceBuiltSdk
            isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
            vmrBranch: ${{ variables.VmrBranch }}
            architecture: x64
            artifactsRid: centos.8-x64
            pool:
              name: ${{ variables.defaultPoolName }}
              demands: ${{ variables.defaultPoolDemandsLinux }}
            container: ${{ variables.centOSStream8Container }}
            buildFromArchive: false            # ðŸš«
            buildSourceOnly: true              # âœ…
            enablePoison: false                # ðŸš«
            excludeOmniSharpTests: true        # âœ…
            runOnline: true                    # âœ…
            runTests: true                     # âœ…
            useMonoRuntime: false              # ðŸš«
            withPreviousSDK: true              # âœ…

        - template: ../jobs/vmr-build.yml
          parameters:
            # Changing the build name requires updating the referenced name in the source-build-sdk-diff-tests.yml pipeline
            buildName: CentOSStream8_Offline_PreviousSourceBuiltSdk
            isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
            vmrBranch: ${{ variables.VmrBranch }}
            architecture: x64
            artifactsRid: centos.8-x64
            pool:
              name: ${{ variables.defaultPoolName }}
              demands: ${{ variables.defaultPoolDemandsLinux }}
            container: ${{ variables.centOSStream8Container }}
            buildFromArchive: false            # ðŸš«
            buildSourceOnly: true              # âœ…
            enablePoison: false                # ðŸš«
            excludeOmniSharpTests: true        # âœ…
            runOnline: false                   # ðŸš«
            runTests: true                     # âœ…
            useMonoRuntime: false              # ðŸš«
            withPreviousSDK: true              # âœ…

        - template: ../jobs/vmr-build.yml
          parameters:
            # Changing the build name requires updating the referenced name in the source-build-sdk-diff-tests.yml pipeline
            buildName: CentOSStream8_Mono_Offline_MsftSdk
            isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
            vmrBranch: ${{ variables.VmrBranch }}
            architecture: x64
            pool:
              name: ${{ variables.defaultPoolName }}
              demands: ${{ variables.defaultPoolDemandsLinux }}
            container: ${{ variables.centOSStream8Container }}
            buildFromArchive: true             # âœ…
            buildSourceOnly: true              # âœ…
            enablePoison: false                # ðŸš«
            excludeOmniSharpTests: true        # âœ…
            runOnline: false                   # ðŸš«
            runTests: true                     # âœ…
            useMonoRuntime: true               # âœ…
            withPreviousSDK: false             # ðŸš«

        - template: ../jobs/vmr-build.yml
          parameters:
            # Changing the build name requires updating the referenced name in the source-build-sdk-diff-tests.yml pipeline
            buildName: CentOSStream9_Offline_MsftSdk
            isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
            vmrBranch: ${{ variables.VmrBranch }}
            architecture: x64
            pool:
              name: ${{ variables.defaultPoolName }}
              demands: ${{ variables.defaultPoolDemandsLinux }}
            container: ${{ variables.centOSStream9Container }}
            buildFromArchive: true             # âœ…
            buildSourceOnly: true              # âœ…
            enablePoison: false                # ðŸš«
            excludeOmniSharpTests: false       # ðŸš«
            runOnline: false                   # ðŸš«
            runTests: true                     # âœ…
            useMonoRuntime: false              # ðŸš«
            withPreviousSDK: false             # ðŸš«

        - template: ../jobs/vmr-build.yml
          parameters:
            # Changing the build name requires updating the referenced name in the source-build-sdk-diff-tests.yml pipeline
            buildName: Fedora39_Offline_MsftSdk
            isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
            vmrBranch: ${{ variables.VmrBranch }}
            architecture: x64
            pool:
              name: ${{ variables.defaultPoolName }}
              demands: ${{ variables.defaultPoolDemandsLinux }}
            container: ${{ variables.fedora39Container }}
            buildFromArchive: true             # âœ…
            buildSourceOnly: true              # âœ…
            enablePoison: false                # ðŸš«
            excludeOmniSharpTests: false       # ðŸš«
            runOnline: false                   # ðŸš«
            runTests: true                     # âœ…
            useMonoRuntime: false              # ðŸš«
            withPreviousSDK: false             # ðŸš«

        - template: ../jobs/vmr-build.yml
          parameters:
            # Changing the build name requires updating the referenced name in the source-build-sdk-diff-tests.yml pipeline
            buildName: Ubuntu2204_Offline_MsftSdk
            isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
            vmrBranch: ${{ variables.VmrBranch }}
            architecture: x64
            pool:
              name: ${{ variables.defaultPoolName }}
              demands: ${{ variables.defaultPoolDemandsLinux }}
            container: ${{ variables.ubuntu2204Container }}
            buildFromArchive: false            # ðŸš«
            buildSourceOnly: true              # âœ…
            enablePoison: false                # ðŸš«
            excludeOmniSharpTests: false       # ðŸš«
            runOnline: false                   # ðŸš«
            runTests: true                     # âœ…
            useMonoRuntime: false              # ðŸš«
            withPreviousSDK: false             # ðŸš«

        - template: ../jobs/vmr-build.yml
          parameters:
            # Changing the build name requires updating the referenced name in the source-build-sdk-diff-tests.yml pipeline
            buildName: Ubuntu2204Arm64_Offline_MsftSdk
            isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
            vmrBranch: ${{ variables.VmrBranch }}
            architecture: arm64
            pool: ${{ variables.defaultPoolNameLinuxArm64 }}
            container: ${{ variables.ubuntu2204ArmContainer }}
            buildFromArchive: false            # ðŸš«
            buildSourceOnly: true              # âœ…
            enablePoison: false                # ðŸš«
            excludeOmniSharpTests: false       # ðŸš«
            runOnline: false                   # ðŸš«
            runTests: true                     # âœ…
            useMonoRuntime: false              # ðŸš«
            withPreviousSDK: false             # ðŸš«

        - template: ../jobs/vmr-build.yml
          parameters:
            # Changing the build name requires updating the referenced name in the source-build-sdk-diff-tests.yml pipeline
            buildName: Fedora39_Offline_CurrentSourceBuiltSdk
            isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
            vmrBranch: ${{ variables.VmrBranch }}
            architecture: x64
            pool:
              name: ${{ variables.defaultPoolName }}
              demands: ${{ variables.defaultPoolDemandsLinux }}
            container: ${{ variables.fedora39Container }}
            buildFromArchive: false            # ðŸš«
            buildSourceOnly: true              # âœ…
            enablePoison: false                # ðŸš«
            excludeOmniSharpTests: false       # ðŸš«
            runOnline: false                   # ðŸš«
            runTests: true                     # âœ…
            useMonoRuntime: false              # ðŸš«
            withPreviousSDK: false             # ðŸš«
            reuseBuildArtifactsFrom: Fedora39_Offline_MsftSdk

#### VERTICAL BUILD ####
- ${{ if not(parameters.isSourceOnlyBuild) }}:
  - stage: VMR_Vertical_Build
    displayName: VMR Vertical Build
    dependsOn: []
    variables:
    - template: ../variables/vmr-stage.yml
      parameters:
        vmrBranch: ${{ parameters.vmrBranch }}
    jobs:

    - template: ../jobs/vmr-build.yml
      parameters:
        buildName: Ubuntu2204
        isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
        vmrBranch: ${{ variables.VmrBranch }}
        architecture: x64
        pool:
          name: ${{ variables.defaultPoolName }}
          demands: ${{ variables.defaultPoolDemandsLinux }}
        container: ${{ variables.ubuntu2204Container }}
        targetOS: linux
        targetArchitecture: x64

    - template: ../jobs/vmr-build.yml
      parameters:
        buildName: Windows
        isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
        vmrBranch: ${{ variables.VmrBranch }}
        architecture: x64
        pool:
          name: ${{ variables.defaultPoolName }}
          demands: ${{ variables.defaultPoolDemandsWindows }}
        targetOS: windows
        targetArchitecture: x64

    - template: ../jobs/vmr-build.yml
      parameters:
        buildName: Browser_Shortstack
        isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
        vmrBranch: ${{ variables.VmrBranch }}
        architecture: wasm
        pool:
          name: ${{ variables.defaultPoolName }}
          demands: ${{ variables.defaultPoolDemandsLinux }}
        container: ${{ variables.wasmCrossContainer }}
        crossRootFs: '/crossrootfs/x64'
        targetOS: browser
        targetArchitecture: wasm

    - template: ../jobs/vmr-build.yml
      parameters:
        buildName: iOSSimulator_Shortstack
        isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
        vmrBranch: ${{ variables.VmrBranch }}
        architecture: arm64
        pool:
          vmImage: ${{ variables.defaultPoolNameMac }}
        targetOS: iossimulator
        targetArchitecture: arm64

    ### Additional jobs for full build ###
    - ${{ if in(parameters.scope, 'full') }}:

        - template: ../jobs/vmr-build.yml
          parameters:
            buildName: Android_Shortstack
            isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
            vmrBranch: ${{ variables.VmrBranch }}
            architecture: x64
            pool:
              name: ${{ variables.defaultPoolName }}
              demands: ${{ variables.defaultPoolDemandsLinux }}
            container: ${{ variables.androidCrossContainer }}
            targetOS: android
            targetArchitecture: x64

        - template: ../jobs/vmr-build.yml
          parameters:
            buildName: iOS_Shortstack
            isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
            vmrBranch: ${{ variables.VmrBranch }}
            architecture: arm64
            pool:
              vmImage: ${{ variables.defaultPoolNameMac }}
            targetOS: ios
            targetArchitecture: arm64

        - template: ../jobs/vmr-build.yml
          parameters:
            buildName: iOSSimulator_Shortstack
            isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
            vmrBranch: ${{ variables.VmrBranch }}
            architecture: x64
            pool:
              vmImage: ${{ variables.defaultPoolNameMac }}
            targetOS: iossimulator
            targetArchitecture: x64

        - template: ../jobs/vmr-build.yml
          parameters:
            buildName: MacCatalyst_Shortstack
            isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
            vmrBranch: ${{ variables.VmrBranch }}
            architecture: arm64
            pool:
              vmImage: ${{ variables.defaultPoolNameMac }}
            targetOS: maccatalyst
            targetArchitecture: arm64

        - template: ../jobs/vmr-build.yml
          parameters:
            buildName: MacCatalyst_Shortstack
            isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
            vmrBranch: ${{ variables.VmrBranch }}
            architecture: x64
            pool:
              vmImage: ${{ variables.defaultPoolNameMac }}
            targetOS: maccatalyst
            targetArchitecture: x64

        - template: ../jobs/vmr-build.yml
          parameters:
            buildName: tvOS_Shortstack
            isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
            vmrBranch: ${{ variables.VmrBranch }}
            architecture: arm64
            pool:
              vmImage: ${{ variables.defaultPoolNameMac }}
            targetOS: tvos
            targetArchitecture: arm64

        - template: ../jobs/vmr-build.yml
          parameters:
            buildName: tvOSSimulator_Shortstack
            isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
            vmrBranch: ${{ variables.VmrBranch }}
            architecture: arm64
            pool:
              vmImage: ${{ variables.defaultPoolNameMac }}
            targetOS: tvossimulator
            targetArchitecture: arm64

        - template: ../jobs/vmr-build.yml
          parameters:
            buildName: tvOSSimulator_Shortstack
            isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
            vmrBranch: ${{ variables.VmrBranch }}
            architecture: x64
            pool:
              vmImage: ${{ variables.defaultPoolNameMac }}
            targetOS: tvossimulator
            targetArchitecture: x64

        - template: ../jobs/vmr-build.yml
          parameters:
            buildName: Wasi_Shortstack
            isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
            vmrBranch: ${{ variables.VmrBranch }}
            architecture: wasm
            pool:
              name: ${{ variables.defaultPoolName }}
              demands: ${{ variables.defaultPoolDemandsLinux }}
            container: ${{ variables.wasmCrossContainer }}
            crossRootFs: '/crossrootfs/x64'
            targetOS: wasi
            targetArchitecture: wasm

        - template: ../jobs/vmr-build.yml
          parameters:
            buildName: OSX
            isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
            vmrBranch: ${{ variables.VmrBranch }}
            architecture: x64
            pool:
              vmImage: ${{ variables.defaultPoolNameMac }}
            targetOS: osx
            targetArchitecture: x64

        - template: ../jobs/vmr-build.yml
          parameters:
            buildName: Mariner_x64_Cross
            isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
            vmrBranch: ${{ variables.VmrBranch }}
            architecture: x64
            pool:
              name: ${{ variables.defaultPoolName }}
              demands: ${{ variables.defaultPoolDemandsLinux }}
            container: ${{ variables.marinerX64CrossContainer }}
            crossRootFs: '/crossrootfs/x64'
            targetOS: linux
            targetArchitecture: x64

      # Mariner x64->non-x64 builds are currently broken, see https://github.com/dotnet/source-build/issues/3698

      # - template: ../jobs/vmr-build.yml
      #   parameters:
      #     buildName: Mariner_x64_Cross
      #     isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
      #     vmrBranch: ${{ variables.VmrBranch }}
      #     architecture: arm64
      #     pool:
      #       name: ${{ variables.defaultPoolName }}
      #       demands: ${{ variables.defaultPoolDemandsLinux }}
      #     container: ${{ variables.marinerArm64CrossContainer }}
      #     crossRootFs: '/crossrootfs/arm64'
      #     targetOS: linux
      #     targetArchitecture: arm64

        - template: ../jobs/vmr-build.yml
          parameters:
            buildName: OSX_x64_Cross
            isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
            vmrBranch: ${{ variables.VmrBranch }}
            architecture: arm64
            pool:
              vmImage: ${{ variables.defaultPoolNameMac }}
            targetOS: osx
            targetArchitecture: arm64
