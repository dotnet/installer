### This stage source-builds https://github.com/dotnet/dotnet with varying parameters
### If run in a PR, new changes are applied to a local copy of the VMR, then it is source-built and tested

parameters:
  dependsOn: []
  condition: always()

  # Branch of the VMR to use (to push to for internal builds)
  vmrBranch: $(Build.SourceBranch)

  # True when the build is a lite build
  isLiteBuild:

  # True when build is running from dotnet/dotnet directly
  isBuiltFromVmr:

  # The following parameters aren't expected to be passed in rather they are used for encapsulation
  # -----------------------------------------------------------------------------------------------
  alpine319Container: mcr.microsoft.com/dotnet-buildtools/prereqs:alpine-3.19-WithNode
  centOSStream8Container: mcr.microsoft.com/dotnet-buildtools/prereqs:centos-stream8
  centOSStream9Container: mcr.microsoft.com/dotnet-buildtools/prereqs:centos-stream9
  fedora39Container: mcr.microsoft.com/dotnet-buildtools/prereqs:fedora-39
  ubuntu2204Container: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-22.04
  ubuntu2204ArmContainer: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-22.04-arm64

  # Internal builds
  poolInternalAmd64:
    name: NetCore1ESPool-Svc-Internal
    demands: ImageOverride -equals Build.Ubuntu.1804.Amd64
  poolInternalAmd64PR:
    name: NetCore1ESPool-Internal-XL
    demands: ImageOverride -equals Build.Ubuntu.1804.Amd64
  poolInternalArm64:
    name: Docker-Linux-Arm-Internal

  # Public builds / PRs
  poolPublicAmd64:
    name: NetCore-Public-XL
    demands: ImageOverride -equals Build.Ubuntu.1804.Amd64.Open

stages:
- stage: VMR_Source_Build
  displayName: VMR Source-Build
  dependsOn: ${{ parameters.dependsOn }}
  condition: ${{ parameters.condition }}
  variables:
  - ${{ if eq(variables['System.TeamProject'], 'public') }}:
    - name: defaultPoolName
      value: ${{ parameters.poolPublicAmd64.name }}
    - name: defaultPoolDemands
      value: ${{ parameters.poolPublicAmd64.demands }}
  - ${{ if eq(variables['System.TeamProject'], 'internal') }}:
    - ${{ if in(variables['Build.Reason'], 'PullRequest') }}:
      - name: defaultPoolName
        value: ${{ parameters.poolInternalAmd64PR.name }}
      - name: defaultPoolDemands
        value: ${{ parameters.poolInternalAmd64PR.demands }}
    - ${{ else }}:
      - name: defaultPoolName
        value: ${{ parameters.poolInternalAmd64.name }}
      - name: defaultPoolDemands
        value: ${{ parameters.poolInternalAmd64.demands }}

  - ${{ if ne(parameters.vmrBranch, '') }}:
    - name: VmrBranch
      value: ${{ parameters.vmrBranch }}
  - ${{ else }}:
    - name: VmrBranch
      value: ${{ replace(replace(variables['Build.SourceBranch'], 'refs/heads/', ''), 'refs/pull/', '') }}

  jobs:

  - template: ../jobs/vmr-build.yml
    parameters:
      # Changing the build name requires updating the referenced name in the source-build-sdk-diff-tests.yml pipeline
      buildName: CentOSStream8_Online_MsftSdk
      isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
      vmrBranch: ${{ variables.VmrBranch }}
      architecture: x64
      pool:
        name: ${{ variables.defaultPoolName }}
        demands: ${{ variables.defaultPoolDemands }}
      container: ${{ parameters.centOSStream8Container }}
      buildFromArchive: false            # ðŸš«
      enablePoison: false                # ðŸš«
      excludeOmniSharpTests: true        # âœ…
      runOnline: true                    # âœ…
      runTests: true                     # âœ…
      useMonoRuntime: false              # ðŸš«
      withPreviousSDK: false             # ðŸš«

  - ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:

    - template: ../jobs/vmr-build.yml
      parameters:
        # Changing the build name requires updating the referenced name in the source-build-sdk-diff-tests.yml pipeline
        buildName: CentOSStream8_Online_CurrentSourceBuiltSdk
        isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
        vmrBranch: ${{ variables.VmrBranch }}
        architecture: x64
        pool:
          name: ${{ variables.defaultPoolName }}
          demands: ${{ variables.defaultPoolDemands }}
        container: ${{ parameters.centOSStream8Container }}
        buildFromArchive: false            # ðŸš«
        enablePoison: false                # ðŸš«
        excludeOmniSharpTests: true        # âœ…
        runOnline: true                    # âœ…
        runTests: true                     # âœ…
        useMonoRuntime: false              # ðŸš«
        withPreviousSDK: false             # ðŸš«
        reuseBuildArtifactsFrom: CentOSStream8_Online_MsftSdk

    - template: ../jobs/vmr-build.yml
      parameters:
        # Changing the build name requires updating the referenced name in the source-build-sdk-diff-tests.yml pipeline
        buildName: Alpine319_Offline_PreviousSourceBuiltSdk
        isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
        vmrBranch: ${{ variables.VmrBranch }}
        architecture: x64
        artifactsRid: alpine.3.19-x64
        pool:
          name: ${{ variables.defaultPoolName }}
          demands: ${{ variables.defaultPoolDemands }}
        container: ${{ parameters.alpine319Container }}
        buildFromArchive: false            # ðŸš«
        enablePoison: true                 # âœ…
        excludeOmniSharpTests: true        # âœ…
        runOnline: false                   # ðŸš«
        runTests: true                     # âœ…
        useMonoRuntime: false              # ðŸš«
        withPreviousSDK: true              # âœ…

  - ${{ if eq(parameters.isLiteBuild, false) }}:

    - template: ../jobs/vmr-build.yml
      parameters:
        # Changing the build name requires updating the referenced name in the source-build-sdk-diff-tests.yml pipeline
        buildName: Alpine319_Online_MsftSdk
        isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
        vmrBranch: ${{ variables.VmrBranch }}
        architecture: x64
        pool:
          name: ${{ variables.defaultPoolName }}
          demands: ${{ variables.defaultPoolDemands }}
        container: ${{ parameters.alpine319Container }}
        buildFromArchive: false            # ðŸš«
        enablePoison: false                # ðŸš«
        excludeOmniSharpTests: true        # âœ…
        runOnline: true                    # âœ…
        runTests: true                     # âœ…
        useMonoRuntime: false              # ðŸš«
        withPreviousSDK: false             # ðŸš«

    - template: ../jobs/vmr-build.yml
      parameters:
        # Changing the build name requires updating the referenced name in the source-build-sdk-diff-tests.yml pipeline
        buildName: CentOSStream8_Offline_MsftSdk
        isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
        vmrBranch: ${{ variables.VmrBranch }}
        architecture: x64
        pool:
          name: ${{ variables.defaultPoolName }}
          demands: ${{ variables.defaultPoolDemands }}
        container: ${{ parameters.centOSStream8Container }}
        buildFromArchive: true             # âœ…
        enablePoison: false                # ðŸš«
        excludeOmniSharpTests: true        # âœ…
        runOnline: false                   # ðŸš«
        runTests: true                     # âœ…
        useMonoRuntime: false              # ðŸš«
        withPreviousSDK: false             # ðŸš«

    - template: ../jobs/vmr-build.yml
      parameters:
        # Changing the build name requires updating the referenced name in the source-build-sdk-diff-tests.yml pipeline
        buildName: CentOSStream8_Online_PreviousSourceBuiltSdk
        isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
        vmrBranch: ${{ variables.VmrBranch }}
        architecture: x64
        artifactsRid: centos.8-x64
        pool:
          name: ${{ variables.defaultPoolName }}
          demands: ${{ variables.defaultPoolDemands }}
        container: ${{ parameters.centOSStream8Container }}
        buildFromArchive: false            # ðŸš«
        enablePoison: false                # ðŸš«
        excludeOmniSharpTests: true        # âœ…
        runOnline: true                    # âœ…
        runTests: true                     # âœ…
        useMonoRuntime: false              # ðŸš«
        withPreviousSDK: true              # âœ…

    - template: ../jobs/vmr-build.yml
      parameters:
        # Changing the build name requires updating the referenced name in the source-build-sdk-diff-tests.yml pipeline
        buildName: CentOSStream8_Offline_PreviousSourceBuiltSdk
        isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
        vmrBranch: ${{ variables.VmrBranch }}
        architecture: x64
        artifactsRid: centos.8-x64
        pool:
          name: ${{ variables.defaultPoolName }}
          demands: ${{ variables.defaultPoolDemands }}
        container: ${{ parameters.centOSStream8Container }}
        buildFromArchive: false            # ðŸš«
        enablePoison: false                # ðŸš«
        excludeOmniSharpTests: true        # âœ…
        runOnline: false                   # ðŸš«
        runTests: true                     # âœ…
        useMonoRuntime: false              # ðŸš«
        withPreviousSDK: true              # âœ…

    - template: ../jobs/vmr-build.yml
      parameters:
        # Changing the build name requires updating the referenced name in the source-build-sdk-diff-tests.yml pipeline
        buildName: CentOSStream8_Mono_Offline_MsftSdk
        isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
        vmrBranch: ${{ variables.VmrBranch }}
        architecture: x64
        pool:
          name: ${{ variables.defaultPoolName }}
          demands: ${{ variables.defaultPoolDemands }}
        container: ${{ parameters.centOSStream8Container }}
        buildFromArchive: true             # âœ…
        enablePoison: false                # ðŸš«
        excludeOmniSharpTests: true        # âœ…
        runOnline: false                   # ðŸš«
        runTests: true                     # âœ…
        useMonoRuntime: true               # âœ…
        withPreviousSDK: false             # ðŸš«

    - template: ../jobs/vmr-build.yml
      parameters:
        # Changing the build name requires updating the referenced name in the source-build-sdk-diff-tests.yml pipeline
        buildName: CentOSStream9_Offline_MsftSdk
        isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
        vmrBranch: ${{ variables.VmrBranch }}
        architecture: x64
        pool:
          name: ${{ variables.defaultPoolName }}
          demands: ${{ variables.defaultPoolDemands }}
        container: ${{ parameters.centOSStream9Container }}
        buildFromArchive: true             # âœ…
        enablePoison: false                # ðŸš«
        excludeOmniSharpTests: false       # ðŸš«
        runOnline: false                   # ðŸš«
        runTests: true                     # âœ…
        useMonoRuntime: false              # ðŸš«
        withPreviousSDK: false             # ðŸš«

    - template: ../jobs/vmr-build.yml
      parameters:
        # Changing the build name requires updating the referenced name in the source-build-sdk-diff-tests.yml pipeline
        buildName: Fedora39_Offline_MsftSdk
        isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
        vmrBranch: ${{ variables.VmrBranch }}
        architecture: x64
        pool:
          name: ${{ variables.defaultPoolName }}
          demands: ${{ variables.defaultPoolDemands }}
        container: ${{ parameters.fedora39Container }}
        buildFromArchive: true             # âœ…
        enablePoison: false                # ðŸš«
        excludeOmniSharpTests: false       # ðŸš«
        runOnline: false                   # ðŸš«
        runTests: true                     # âœ…
        useMonoRuntime: false              # ðŸš«
        withPreviousSDK: false             # ðŸš«

    - template: ../jobs/vmr-build.yml
      parameters:
        # Changing the build name requires updating the referenced name in the source-build-sdk-diff-tests.yml pipeline
        buildName: Ubuntu2204_Offline_MsftSdk
        isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
        vmrBranch: ${{ variables.VmrBranch }}
        architecture: x64
        pool:
          name: ${{ variables.defaultPoolName }}
          demands: ${{ variables.defaultPoolDemands }}
        container: ${{ parameters.ubuntu2204Container }}
        buildFromArchive: false            # ðŸš«
        enablePoison: false                # ðŸš«
        excludeOmniSharpTests: false       # ðŸš«
        runOnline: false                   # ðŸš«
        runTests: true                     # âœ…
        useMonoRuntime: false              # ðŸš«
        withPreviousSDK: false             # ðŸš«

    - template: ../jobs/vmr-build.yml
      parameters:
        # Changing the build name requires updating the referenced name in the source-build-sdk-diff-tests.yml pipeline
        buildName: Ubuntu2204Arm64_Offline_MsftSdk
        isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
        vmrBranch: ${{ variables.VmrBranch }}
        architecture: arm64
        pool: ${{ parameters.poolInternalArm64 }}
        container: ${{ parameters.ubuntu2204ArmContainer }}
        buildFromArchive: false            # ðŸš«
        enablePoison: false                # ðŸš«
        excludeOmniSharpTests: false       # ðŸš«
        runOnline: false                   # ðŸš«
        runTests: true                     # âœ…
        useMonoRuntime: false              # ðŸš«
        withPreviousSDK: false             # ðŸš«

    - template: ../jobs/vmr-build.yml
      parameters:
        # Changing the build name requires updating the referenced name in the source-build-sdk-diff-tests.yml pipeline
        buildName: Fedora39_Offline_CurrentSourceBuiltSdk
        isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
        vmrBranch: ${{ variables.VmrBranch }}
        architecture: x64
        pool:
          name: ${{ variables.defaultPoolName }}
          demands: ${{ variables.defaultPoolDemands }}
        container: ${{ parameters.fedora39Container }}
        buildFromArchive: false            # ðŸš«
        enablePoison: false                # ðŸš«
        excludeOmniSharpTests: false       # ðŸš«
        runOnline: false                   # ðŸš«
        runTests: true                     # âœ…
        useMonoRuntime: false              # ðŸš«
        withPreviousSDK: false             # ðŸš«
        reuseBuildArtifactsFrom: Fedora39_Offline_MsftSdk
